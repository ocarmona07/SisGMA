<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ import namespace="System.IO" #>
<#@ include file="EF.Utility.CS.ttinclude"#>
<#@ output extension=".cs" #><#

var entityFolder = Path.GetDirectoryName(Host.TemplateFile) + @"\..\SisGMA.Entidades\";
var fileManager = EntityFrameworkTemplateFileManager.Create(this); 
fileManager.StartHeader();
#>//------------------------------------------------------------------------------
// <auto-generated>
// <#=CodeGenerationTools.GetResourceString("Template_GeneratedCodeCommentLine1")#>
//
// <#=CodeGenerationTools.GetResourceString("Template_GeneratedCodeCommentLine2")#>
// <#=CodeGenerationTools.GetResourceString("Template_GeneratedCodeCommentLine3")#>
// </auto-generated>
//------------------------------------------------------------------------------
<#
var directory = Directory.GetFiles(entityFolder);
foreach (var fileName in directory)
{
    if (Path.GetExtension(fileName) == ".cs" &&
        !Path.GetFileNameWithoutExtension(fileName).Contains("SisGMA"))
    {
        var newName = Path.GetFileNameWithoutExtension(fileName);
        fileManager.StartNewFile(newName + "Da.cs");
#>

namespace SisGMA.Datos
{
    using System;
    using System.Collections.Generic;
    using System.Data.Entity;
    using System.Linq;
    using Entidades;

    public class <#= newName + "Da" #> : BaseEntity
    {
        private readonly SisGMAEntities _sisGmaEntities;

        public <#= newName + "Da" #>()
        {
            IsValid = true;
            ErrorMessage = string.Empty;
            if (_sisGmaEntities == null)
            {
                _sisGmaEntities = new SisGMAEntities();
            }
        }
        
        public <#= newName #> Insert(<#= newName #> item)
        {
            try
            {
                _sisGmaEntities.<#= newName #>.Add(item);
                _sisGmaEntities.SaveChanges();
                return item;
            }
            catch (EntryPointNotFoundException ep)
            {
                IsValid = false;
                ErrorMessage = ep.GetBaseException().Message;
                return null;
            }
            catch (Exception e)
            {
                IsValid = false;
                ErrorMessage = e.GetBaseException().Message;
                return null;
            }
        }
        
        public <#= newName #> Get(int idItem)
        {
            try
            {
                return _sisGmaEntities.<#= newName #>.FirstOrDefault(o => o.IdCliente == idItem); // TODO: Reemplazar Id
            }
            catch (EntryPointNotFoundException ep)
            {
                IsValid = false;
                ErrorMessage = ep.GetBaseException().Message;
                return null;
            }
            catch (Exception e)
            {
                IsValid = false;
                ErrorMessage = e.GetBaseException().Message;
                return null;
            }
        }
        
        public List<<#= newName #>> GetAll()
        {
            try
            {
                return _sisGmaEntities.<#= newName #>.ToList();
            }
            catch (EntryPointNotFoundException ep)
            {
                IsValid = false;
                ErrorMessage = ep.GetBaseException().Message;
                return null;
            }
            catch (Exception e)
            {
                IsValid = false;
                ErrorMessage = e.GetBaseException().Message;
                return null;
            }
        }
        
        public <#= newName #> Update(<#= newName #> item)
        {
            try
            {
                _sisGmaEntities.<#= newName #>.Attach(item);
                var entry = _sisGmaEntities.Entry(item);
                entry.Property(o => o.Nombres).IsModified = true; // TODO: Reemplazar atributos
                entry.Property(o => o.ApPaterno).IsModified = true;
                entry.Property(o => o.ApMaterno).IsModified = true;
                entry.Property(o => o.Direccion).IsModified = true;
                entry.Property(o => o.Email).IsModified = true;
                entry.Property(o => o.Telefono).IsModified = true;
                entry.Property(o => o.IdComuna).IsModified = true;
                entry.Property(o => o.Estado).IsModified = true;
                _sisGmaEntities.SaveChanges();
                return item;
            }
            catch (EntryPointNotFoundException ep)
            {
                IsValid = false;
                ErrorMessage = ep.GetBaseException().Message;
                return null;
            }
            catch (Exception e)
            {
                IsValid = false;
                ErrorMessage = e.GetBaseException().Message;
                return null;
            }
        }

        public bool Delete(int idItem)
        {
            try
            {
                var entry = _sisGmaEntities.<#= newName #>.FirstOrDefault(o => o.IdCliente == idItem); // TODO: Reemplazar Id
                _sisGmaEntities.Entry(entry).State = EntityState.Deleted;
                return _sisGmaEntities.SaveChanges() > 0;
            }
            catch (EntryPointNotFoundException ep)
            {
                IsValid = false;
                ErrorMessage = ep.GetBaseException().Message;
                return false;
            }
            catch (Exception e)
            {
                IsValid = false;
                ErrorMessage = e.GetBaseException().Message;
                return false;
            }
        }
    }
}
<#
    }
}
fileManager.Process(); 
#>